name: Release

on:
  push:
    tags:
      - "v*.*.*" # Trigger only when a version tag is pushed

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ["linux", "windows", "darwin"]
        arch: ["amd64", "arm64"]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Build binary
        run: |
          if [ "${{ matrix.os }}" = "windows" ]; then EXT=".exe"; else EXT=""; fi
          echo -n "${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}" > VERSION
          mkdir -p dist/phishell-${{ matrix.os }}-${{ matrix.arch }}
          npm install -C ./js
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} \
          go build -o dist/phishell-${{ matrix.os }}-${{ matrix.arch }}/phishell${EXT} .
          OUTPUT_PATH=../dist/phishell-${{ matrix.os }}-${{ matrix.arch }}/phishell-js.mjs npm run build:release -C ./js

      - name: Compress binary
        run: |
          if [ "${{ matrix.os }}" = "windows" ]; then
            zip -j dist/phishell-${{ matrix.os }}-${{ matrix.arch }}.zip dist/phishell-${{ matrix.os }}-${{ matrix.arch }}/*
          else
            tar czvf dist/phishell-${{ matrix.os }}-${{ matrix.arch }}.tar.gz -C dist/phishell-${{ matrix.os }}-${{ matrix.arch }} .
          fi

      - name: Upload compressed artifact
        uses: actions/upload-artifact@v4
        with:
          name: phishell-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            dist/phishell-${{ matrix.os }}-${{ matrix.arch }}.zip
            dist/phishell-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          retention-days: 1

  release:
    name: Create and Publish Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
          files: |
            artifacts/**/*.zip
            artifacts/**/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
