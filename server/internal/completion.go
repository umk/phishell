package internal

import "github.com/umk/phishell/util/marshalx"

type ChatCompletionMessageToolCall = marshalx.Dynamic[struct {
	// The function that the model called.
	Function marshalx.Dynamic[struct {
		// The arguments to call the function with, as generated by the model
		// in JSON format. Note that the model does not always generate valid JSON,
		// and may hallucinate parameters not defined by your function schema.
		// Validate the arguments in your code before calling your function.
		Arguments string `json:"arguments"`

		// The name of the function to call.
		Name string `json:"name"`
	}] `json:"function"`

	// The ID of the tool call.
	Id string `json:"id"`

	// The type of the tool. Currently, only `function` is supported.
	Type ChatCompletionMessageToolCallType `json:"type"`
}]

// The type of the tool. Currently, only `function` is supported.
type ChatCompletionMessageToolCallType string

// The tool calls generated by the model, such as function calls.
type ChatCompletionMessageToolCalls = []ChatCompletionMessageToolCall

type ChatCompletionResponseMessage = marshalx.Dynamic[struct {
	// The tool calls generated by the model, such as function calls.
	ToolCalls *ChatCompletionMessageToolCalls `json:"tool_calls,omitempty"`
}]

type ChatCompletionTool struct {
	Function FunctionObject `json:"function"`

	// Type The type of the tool. Currently, only `function` is supported.
	Type ChatCompletionToolType `json:"type"`
}

// The type of the tool. Currently, only `function` is supported.
type ChatCompletionToolType string

const (
	Function ChatCompletionToolType = "function"
)

type FunctionObject marshalx.Dynamic[struct {
	// A description of what the function does, used by the model to choose when and how to call the function.
	Description *string `json:"description,omitempty"`

	// Name The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
	Name string `json:"name"`

	// Parameters The parameters the functions accepts, described as a JSON Schema object.
	//
	// Omitting `parameters` defines a function with an empty parameter list.
	Parameters *FunctionParameters `json:"parameters,omitempty"`

	// Strict Whether to enable strict schema adherence when generating the function call.
	// If set to true, the model will follow the exact schema defined in the `parameters`
	// field. Only a subset of JSON Schema is supported when `strict` is `true`.
	Strict *bool `json:"strict"`
}]

// FunctionParameters The parameters the functions accepts, described as a JSON Schema object.
//
// Omitting `parameters` defines a function with an empty parameter list.
type FunctionParameters map[string]any

type CreateChatCompletionRequest = marshalx.Dynamic[struct {
	// ID of the model to use.
	Model string `json:"model"`

	// A list of messages comprising the conversation so far.
	Messages []ChatCompletionRequestMessage `json:"messages"`

	// A list of tools the model may call. Currently, only functions are
	// supported as a tool. Use this to provide a list of functions the model may
	// generate JSON inputs for. A max of 128 functions are supported.
	Tools *[]ChatCompletionTool `json:"tools,omitempty"`
}]

// The role of the messages author.
type ChatCompletionMessageRole string

const (
	ChatCompletionRoleAssistant ChatCompletionMessageRole = "assistant"
	ChatCompletionRoleSystem    ChatCompletionMessageRole = "system"
	ChatCompletionRoleTool      ChatCompletionMessageRole = "tool"
	ChatCompletionRoleUser      ChatCompletionMessageRole = "user"
)

type ChatCompletionRequestMessage marshalx.Dynamic[struct {
	// The contents of the message.
	Content string `json:"content"`

	// An optional name for the participant. Provides the model information to differentiate between participants of the same role.
	Name *string `json:"name,omitempty"`

	// The role of the messages author.
	Role ChatCompletionMessageRole `json:"role"`
}]

type CreateChatCompletionResponse = marshalx.Dynamic[struct {
	// A list of chat completion choices. Can be more than one if `n` is greater than 1.
	Choices []marshalx.Dynamic[struct {
		// A chat completion message generated by the model.
		Message ChatCompletionResponseMessage `json:"message"`
	}] `json:"choices"`
}]
