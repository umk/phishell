package internal

import "github.com/umk/phishell/util/marshalx"

type ChatCompletionMessageToolCall = marshalx.Dynamic[struct {
	// The function that the model called.
	Function struct {
		// The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
		Arguments string `json:"arguments"`

		// The name of the function to call.
		Name string `json:"name"`
	} `json:"function"`

	// The ID of the tool call.
	Id string `json:"id"`

	// The type of the tool. Currently, only `function` is supported.
	Type ChatCompletionMessageToolCallType `json:"type"`
}]

// The type of the tool. Currently, only `function` is supported.
type ChatCompletionMessageToolCallType string

// The tool calls generated by the model, such as function calls.
type ChatCompletionMessageToolCalls = []ChatCompletionMessageToolCall

type ChatCompletionResponseMessage = marshalx.Dynamic[struct {
	// The tool calls generated by the model, such as function calls.
	ToolCalls *ChatCompletionMessageToolCalls `json:"tool_calls,omitempty"`
}]

type CreateChatCompletionRequest = marshalx.Dynamic[struct {
	// ID of the model to use.
	Model string `json:"model"`
}]

type CreateChatCompletionResponse = marshalx.Dynamic[struct {
	// A list of chat completion choices. Can be more than one if `n` is greater than 1.
	Choices []marshalx.Dynamic[struct {
		// A chat completion message generated by the model.
		Message ChatCompletionResponseMessage `json:"message"`
	}] `json:"choices"`
}]
